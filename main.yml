---

- hosts: all
  tasks:

  - name: Install prerequisites
    package:
      name:
      - build-essential
      - libxml2-dev
      - libxslt-dev
      - zlib1g-dev
      - python3-dev
      - python3-pip
      - python3-venv
      - python3-psycopg2
      - git
      - pandoc
      - texlive
      - texlive-xetex
      - lmodern
      - librsvg2-bin
      # postgres
      - postgresql
      - libpq-dev
      - python3-psycopg2
      # nginx
      - nginx
      - certbot
      - python3-certbot-nginx
      update_cache: true
    tags:
    - prerequisites

  - name: Create rdmo user
    user:
      name: rdmo
      password: '*'
      home: /srv/rdmo
      shell: /bin/bash
    tags:
    - user

  - name: Allow read access to the rdmo users home
    file:
      dest: /srv/rdmo
      mode: 0755
    tags:
    - user

  - name: Create rdmo postgres user
    become: true
    become_user: postgres
    postgresql_user:
      name: rdmo
      role_attr_flags: CREATEDB,NOSUPERUSER
    tags:
    - postgres

  - name: Create rdmo postgres database
    become: true
    become_user: postgres
    postgresql_db:
      name: rdmo
    tags:
    - postgres

  - name: Clone the rdmo-app repository
    become: true
    become_user: rdmo
    git:
      repo: "{{ repository }}"
      dest: /srv/rdmo/rdmo-app
      accept_hostkey: yes
    when: repository is defined
    notify: Restart rdmo
    tags:
    - rdmo

  - name: Create virtual environment and install python requirements
    become: true
    become_user: rdmo
    pip:
      name: "{{ requirements }}"
      virtualenv: /srv/rdmo/rdmo-app/env
      virtualenv_command: "python3 -m venv /srv/rdmo/rdmo-app/env"
    when: requirements is defined
    notify: Restart rdmo
    tags:
    - rdmo

  - name: Copy config/settings/local.py
    become: true
    become_user: rdmo
    copy:
      src: "{{ local_py }}"
      dest: /srv/rdmo/rdmo-app/config/settings/local.py
    when: local_py is defined
    notify: Restart rdmo
    tags:
    - rdmo

  - name: Run manage upgrade
    become: true
    become_user: rdmo
    shell:
      cmd: |
        env/bin/python manage.py upgrade
        touch .upgraded
      chdir: /srv/rdmo/rdmo-app
      creates: .upgraded
    tags:
    - rdmo

  - name: Copy fixtures
    become: true
    become_user: rdmo
    copy:
      src: "{{ fixtures }}"
      dest: /srv/rdmo/fixtures.json
    when: fixtures is defined
    tags:
    - rdmo

  - name: Load fixtures
    become: true
    become_user: rdmo
    shell:
      cmd: |
        env/bin/python manage.py loaddata /srv/rdmo/fixtures.json
        touch .loaded
      chdir: /srv/rdmo/rdmo-app
      creates: .loaded
    when: fixtures is defined
    tags:
    - rdmo

  - name: Copy /etc/systemd/system/rdmo.service
    copy:
      src: "{{ rdmo_service }}"
      dest: /etc/systemd/system/rdmo.service
    when: rdmo_service is defined
    notify: Restart rdmo
    tags:
    - systemd

  - name: Register certbot
    shell:
      cmd: |
        certbot -n register --agree-tos --email {{ certbot_email }}
        touch /etc/letsencrypt/.registered
      creates: /etc/letsencrypt/.registered
    when: certbot_email is defined
    tags:
    - certbot

  - name: Get certificate
    command:
      cmd: certbot -n --nginx certonly -d {{ certbot_hostname }}
      creates: /etc/letsencrypt/live/{{ certbot_hostname }}
    ignore_errors: true
    when: certbot_hostname is defined
    tags:
    - certbot

  - name: Copy /etc/nginx/sites-available/rdmo.conf
    copy:
      src: "{{ nginx_conf }}"
      dest: /etc/nginx/sites-available/rdmo.conf
    when: nginx_conf is defined
    notify: Reload nginx
    tags:
    - nginx

  - name: Link /etc/nginx/sites-enabled/rdmo.conf
    file:
      src: /etc/nginx/sites-available/rdmo.conf
      dest: /etc/nginx/sites-enabled/rdmo.conf
      state: link
    notify: Reload nginx
    tags:
    - nginx

  handlers:

  - name: Restart rdmo
    systemd:
      name: rdmo
      state: restarted
      daemon_reload: yes

  - name: Reload nginx
    systemd:
      name: nginx
      state: reloaded
